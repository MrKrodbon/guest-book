name: dockercompose3570267489868200479
services:
  guestbook.api:
    build:
      context: C:\Users\Eugene\Desktop\MyProjects\guest-book
      dockerfile: src/GuestBook.Api/Dockerfile
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      ASPNETCORE_URLS: https://+:443;http://+:80
    image: guestbookapi
    networks:
      default: null
    ports:
    - mode: ingress
      target: 80
      published: "5001"
      protocol: tcp
    - mode: ingress
      target: 443
      published: "5000"
      protocol: tcp
    volumes:
    - type: bind
      source: C:\Users\Eugene\AppData\Roaming\Roaming\Microsoft\UserSecrets
      target: /appdata/Microsoft/UserSecrets
      bind:
        create_host_path: true
    - type: bind
      source: C:\Users\Eugene\AppData\Roaming\Roaming\ASP.NET\Https
      target: /appdata/ASP.NET/Https
      bind:
        create_host_path: true
  guestbook.service:
    build:
      context: C:\Users\Eugene\Desktop\MyProjects\guest-book
      dockerfile: src/GuestBookService/Dockerfile
    depends_on:
      rabbitmq:
        condition: service_healthy
      sql-server:
        condition: service_started
    extra_hosts:
    - host.docker.internal:host-gateway
    image: guestbookservice
    networks:
      default: null
  rabbitmq:
    healthcheck:
      test:
      - CMD
      - rabbitmqctl
      - status
      timeout: 10s
      interval: 30s
      retries: 5
    image: rabbitmq:3-management
    networks:
      default: null
    ports:
    - mode: ingress
      target: 5672
      published: "5672"
      protocol: tcp
    - mode: ingress
      target: 15672
      published: "15672"
      protocol: tcp
    volumes:
    - type: volume
      source: rabbitmqdata
      target: /var/lib/rabbitmq/mnesia
      volume: {}
  sql-server:
    environment:
      ACCEPT_EULA: "Y"
      SA_PASSWORD: Guestbook24app
    image: mcr.microsoft.com/mssql/server
    networks:
      default: null
    ports:
    - mode: ingress
      target: 1433
      published: "1433"
      protocol: tcp
    user: root
    volumes:
    - type: volume
      source: dbdata
      target: /var/opt/mssql/data
      volume: {}
networks:
  default:
    name: dockercompose3570267489868200479_default
volumes:
  dbdata:
    name: dockercompose3570267489868200479_dbdata
  rabbitmqdata:
    name: dockercompose3570267489868200479_rabbitmqdata