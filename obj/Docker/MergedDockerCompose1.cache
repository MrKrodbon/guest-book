name: dockercompose3570267489868200479
services:
  guestbook.api:
    build:
      context: C:\Users\Eugene\Desktop\MyProjects\guest-book
      dockerfile: src/GuestBook.Api/Dockerfile
      labels:
        com.microsoft.created-by: visual-studio
        com.microsoft.visual-studio.project-name: GuestBook.Api
      target: base
    container_name: GuestBook.Api
    entrypoint:
    - tail
    - -f
    - /dev/null
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      ASPNETCORE_LOGGING__CONSOLE__DISABLECOLORS: "true"
      ASPNETCORE_URLS: https://+:443;http://+:80
      DOTNET_USE_POLLING_FILE_WATCHER: "1"
      NUGET_FALLBACK_PACKAGES: ""
    image: guestbookapi:dev
    labels:
      com.microsoft.visualstudio.debuggee.arguments: ' --additionalProbingPath /root/.nuget/packages  "/app/bin/Debug/net7.0/GuestBook.Api.dll"'
      com.microsoft.visualstudio.debuggee.killprogram: /bin/sh -c "if PID=$$(pidof
        dotnet); then kill $$PID; fi"
      com.microsoft.visualstudio.debuggee.program: dotnet
      com.microsoft.visualstudio.debuggee.workingdirectory: /app
    networks:
      default: null
    ports:
    - mode: ingress
      target: 80
      published: "5001"
      protocol: tcp
    - mode: ingress
      target: 443
      published: "5000"
      protocol: tcp
    tty: true
    volumes:
    - type: bind
      source: C:\Program Files\Microsoft Visual Studio\2022\Community\MSBuild\Sdks\Microsoft.Docker.Sdk\tools\TokenService.Proxy\linux-x64\net7.0
      target: /TokenService.Proxy
      read_only: true
      bind:
        create_host_path: true
    - type: bind
      source: C:\Users\Eugene\Desktop\MyProjects\guest-book\src\GuestBook.Api
      target: /app
      bind:
        create_host_path: true
    - type: bind
      source: C:\Users\Eugene\AppData\Roaming\Roaming\ASP.NET\Https
      target: /appdata/ASP.NET/Https
      bind:
        create_host_path: true
    - type: bind
      source: C:\Users\Eugene\AppData\Roaming\Roaming\Microsoft\UserSecrets
      target: /appdata/Microsoft/UserSecrets
      bind:
        create_host_path: true
    - type: bind
      source: C:\Users\Eugene\vsdbg\vs2017u5
      target: /remote_debugger
      bind:
        create_host_path: true
    - type: bind
      source: C:\Users\Eugene\AppData\Roaming/ASP.NET/Https
      target: /root/.aspnet/https
      read_only: true
      bind:
        create_host_path: true
    - type: bind
      source: C:\Users\Eugene\AppData\Roaming/Microsoft/UserSecrets
      target: /root/.microsoft/usersecrets
      read_only: true
      bind:
        create_host_path: true
    - type: bind
      source: C:\Users\Eugene\.nuget\packages\
      target: /root/.nuget/packages
      read_only: true
      bind:
        create_host_path: true
    - type: bind
      source: C:\Users\Eugene\Desktop\MyProjects\guest-book
      target: /src
      bind:
        create_host_path: true
  guestbook.service:
    build:
      context: C:\Users\Eugene\Desktop\MyProjects\guest-book
      dockerfile: src/GuestBookService/Dockerfile
      labels:
        com.microsoft.created-by: visual-studio
        com.microsoft.visual-studio.project-name: GuestBookService
      target: base
    container_name: GuestBookService
    depends_on:
      rabbitmq:
        condition: service_healthy
      sql-server:
        condition: service_started
    entrypoint:
    - tail
    - -f
    - /dev/null
    environment:
      NUGET_FALLBACK_PACKAGES: ""
    extra_hosts:
    - host.docker.internal:host-gateway
    image: guestbookservice:dev
    labels:
      com.microsoft.visualstudio.debuggee.arguments: ' --additionalProbingPath /root/.nuget/packages  "/app/bin/Debug/net7.0/GuestBookService.dll"'
      com.microsoft.visualstudio.debuggee.killprogram: /bin/sh -c "if PID=$$(pidof
        dotnet); then kill $$PID; fi"
      com.microsoft.visualstudio.debuggee.program: dotnet
      com.microsoft.visualstudio.debuggee.workingdirectory: /app
    networks:
      default: null
    tty: true
    volumes:
    - type: bind
      source: C:\Users\Eugene\Desktop\MyProjects\guest-book\src\GuestBookService
      target: /app
      bind:
        create_host_path: true
    - type: bind
      source: C:\Users\Eugene\Desktop\MyProjects\guest-book
      target: /src
      bind:
        create_host_path: true
    - type: bind
      source: C:\Users\Eugene\vsdbg\vs2017u5
      target: /remote_debugger
      bind:
        create_host_path: true
    - type: bind
      source: C:\Users\Eugene\.nuget\packages\
      target: /root/.nuget/packages
      read_only: true
      bind:
        create_host_path: true
    - type: bind
      source: C:\Users\Eugene\AppData\Roaming/Microsoft/UserSecrets
      target: /root/.microsoft/usersecrets
      read_only: true
      bind:
        create_host_path: true
    - type: bind
      source: C:\Program Files\Microsoft Visual Studio\2022\Community\MSBuild\Sdks\Microsoft.Docker.Sdk\tools\TokenService.Proxy\linux-x64\net7.0
      target: /TokenService.Proxy
      read_only: true
      bind:
        create_host_path: true
  rabbitmq:
    healthcheck:
      test:
      - CMD
      - rabbitmqctl
      - status
      timeout: 10s
      interval: 30s
      retries: 5
    image: rabbitmq:3-management
    networks:
      default: null
    ports:
    - mode: ingress
      target: 5672
      published: "5672"
      protocol: tcp
    - mode: ingress
      target: 15672
      published: "15672"
      protocol: tcp
    volumes:
    - type: volume
      source: rabbitmqdata
      target: /var/lib/rabbitmq/mnesia
      volume: {}
  sql-server:
    environment:
      ACCEPT_EULA: "Y"
      SA_PASSWORD: Guestbook24app
    image: mcr.microsoft.com/mssql/server
    networks:
      default: null
    ports:
    - mode: ingress
      target: 1433
      published: "1433"
      protocol: tcp
    user: root
    volumes:
    - type: volume
      source: dbdata
      target: /var/opt/mssql/data
      volume: {}
networks:
  default:
    name: dockercompose3570267489868200479_default
volumes:
  dbdata:
    name: dockercompose3570267489868200479_dbdata
  rabbitmqdata:
    name: dockercompose3570267489868200479_rabbitmqdata